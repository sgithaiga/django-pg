# Generated by Django 3.1.2 on 2021-09-14 18:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, unique=True)),
                ('pf_no', models.CharField(max_length=100, unique=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=100)),
                ('license_number', models.CharField(max_length=100, unique=True)),
                ('expiry_date', models.DateField()),
                ('driver_history', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Fuel_name',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_name', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fuel_station',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_station_name', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Make',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_name', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_model', models.CharField(max_length=200, null=True)),
                ('model_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.make')),
            ],
        ),
        migrations.CreateModel(
            name='station',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station', models.CharField(choices=[('Headquarters', 'Headquarters'), ('Eastern Region', 'Eastern Region'), ('Central Region', 'Central Region'), ('Northern Region', 'Northern Region'), ('North Eastern', 'North Eastern'), ('Southern Region', 'Southern Region'), ('Western Region', 'Western Region'), ('Informal Settlements Region', 'Informal Settlements Region'), ('Ruai', 'Ruai'), ('Ruiru Dam', 'Ruiru Dam'), ('Gigiri', 'Gigiri'), ('Kabete Laboratory', 'Kabete Laboratory'), ('Ngethu Treatment Works', 'Ngethu Treatment Works'), ('Thika Dam', 'Thika Dam'), ('Sasumua Treatment Works', 'Sasumua Treatment Works'), ('Kariobangi Treatment Works', 'Kariobangi Treatment Works')], default='Eastern Region', max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Testfuelname',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_name', models.CharField(max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Testfuelprice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('date_entered', models.DateTimeField(auto_now=True, null=True)),
                ('fuel_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.testfuelname')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle_register',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_no', models.CharField(max_length=100, unique=True)),
                ('engine_capacity', models.CharField(max_length=100)),
                ('drive_type', models.CharField(choices=[('Rear Wheel Drive', 'Rear Wheel Drive'), ('Four Wheel Drive', 'Four Wheel Drive')], default='Rear Wheel Drive', max_length=100)),
                ('transmission', models.CharField(choices=[('Manual Transmission', 'Manual Transmission'), ('Automatic Transmission', 'Automatical Transmission')], default='Manual Transmission', max_length=200)),
                ('body_type', models.CharField(max_length=100)),
                ('fuel_tank_capacity', models.CharField(max_length=100)),
                ('operational_status', models.CharField(choices=[('operational', 'Operational'), ('grounded', 'Grounded'), ('not applicable', 'Not Applicable')], default='not applicable', max_length=200)),
                ('mechanical_status', models.CharField(choices=[('accident', 'Accident'), ('write off', 'Accident(Write off)'), ('servicable', 'Servicable'), ('insurance', 'Insurance'), ('reparable', 'Reparable'), ('not reparable', 'Not Reparable'), ('Repairs in progress', 'Repairs in progress'), ('not applicable', 'Not Applicable')], default='accident', max_length=200)),
                ('remarks', models.TextField(blank=True)),
                ('date_registered', models.DateTimeField(default=django.utils.timezone.now)),
                ('log_book', models.FileField(null=True, upload_to='documents/')),
                ('make', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.make')),
                ('model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.model')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.station')),
                ('registered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle_issues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_reference', models.UUIDField(default=uuid.uuid4)),
                ('Vehicle_issue_topic', models.CharField(max_length=100, null=True)),
                ('vehicle_issue', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('vehicle_in', models.BooleanField(default=False)),
                ('declined', models.BooleanField(default=False)),
                ('reason_for_decline', models.TextField(blank=True, null=True)),
                ('current_mileage', models.CharField(max_length=100, null=True)),
                ('next_service', models.CharField(max_length=100, null=True)),
                ('date_received', models.DateTimeField(default=django.utils.timezone.now)),
                ('service', models.BooleanField(default=False)),
                ('service_description', models.TextField(blank=True, null=True)),
                ('service_total', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('repair', models.BooleanField(default=False)),
                ('repair_description', models.TextField(blank=True, null=True)),
                ('repair_total', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('parts_requisition_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('parts_received_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('further_works_required_remarks', models.TextField(blank=True, null=True)),
                ('vehicle_out', models.BooleanField(default=False)),
                ('date_released', models.DateTimeField(default=django.utils.timezone.now)),
                ('down_time', models.CharField(max_length=100, null=True)),
                ('mechanic_assesment', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logger', to=settings.AUTH_USER_MODEL)),
                ('driver_assigned', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='driverassigned', to='transport.driver')),
                ('mechanic', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mechassigned', to=settings.AUTH_USER_MODEL)),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.station')),
                ('transport_assistant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ta', to=settings.AUTH_USER_MODEL)),
                ('transport_officer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to', to=settings.AUTH_USER_MODEL)),
                ('transport_supervisor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ts', to=settings.AUTH_USER_MODEL)),
                ('vehicle_registration_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.vehicle_register')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle_handover',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason_for_handover', models.CharField(max_length=200, null=True)),
                ('head_lights', models.CharField(max_length=100, null=True)),
                ('side_lights', models.CharField(max_length=100, null=True)),
                ('rear_lights', models.CharField(max_length=100, null=True)),
                ('mirrors_external', models.CharField(max_length=100, null=True)),
                ('mirrors_internal', models.CharField(max_length=100, null=True)),
                ('wiper_arms', models.CharField(max_length=100, null=True)),
                ('wiper_blades', models.CharField(max_length=100, null=True)),
                ('sunvisors', models.CharField(max_length=100, null=True)),
                ('radio', models.CharField(max_length=100, null=True)),
                ('radio_knobs', models.CharField(max_length=100, null=True)),
                ('speakers', models.CharField(max_length=100, null=True)),
                ('radio_aerial', models.CharField(max_length=100, null=True)),
                ('horn', models.CharField(max_length=100, null=True)),
                ('spare_wheel', models.CharField(max_length=100, null=True)),
                ('wheel_caps', models.CharField(max_length=100, null=True)),
                ('wheel_spanner', models.CharField(max_length=100, null=True)),
                ('floor_mats', models.CharField(max_length=100, null=True)),
                ('tool_kit', models.CharField(max_length=100, null=True)),
                ('jack', models.CharField(max_length=100, null=True)),
                ('cigarette_lighter', models.CharField(max_length=100, null=True)),
                ('vehicle_manual', models.CharField(max_length=100, null=True)),
                ('life_savers', models.CharField(max_length=100, null=True)),
                ('ignition_keys', models.CharField(max_length=100, null=True)),
                ('door_keys', models.CharField(max_length=100, null=True)),
                ('seat_belts', models.CharField(max_length=100, null=True)),
                ('horn_relays', models.CharField(max_length=100, null=True)),
                ('light_relays', models.CharField(max_length=100, null=True)),
                ('head_rests', models.CharField(max_length=100, null=True)),
                ('buffer_rubbers', models.CharField(max_length=100, null=True)),
                ('petrol_tank_cap', models.CharField(max_length=100, null=True)),
                ('key_holder', models.CharField(max_length=100, null=True)),
                ('damage_on_departure', models.TextField(blank=True, null=True)),
                ('damage_on_arrival', models.TextField(blank=True, null=True)),
                ('date_issued', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_received', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_authorised', models.DateTimeField(default=django.utils.timezone.now)),
                ('assigned_driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='issueddriver', to='transport.driver')),
                ('authorised_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vauthorised', to=settings.AUTH_USER_MODEL)),
                ('current_driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='currdriver', to='transport.driver')),
                ('duty_station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.station')),
                ('issued_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vhandover', to=settings.AUTH_USER_MODEL)),
                ('received_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vreceived', to=settings.AUTH_USER_MODEL)),
                ('registration_no', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.vehicle_register')),
            ],
        ),
        migrations.CreateModel(
            name='UserUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('region_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rname', to='transport.station')),
            ],
        ),
        migrations.CreateModel(
            name='TestM',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(blank=True, max_length=100, null=True)),
                ('price', models.CharField(max_length=200)),
                ('quantity', models.CharField(max_length=200)),
                ('total', models.CharField(max_length=200)),
                ('fuel_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.testfuelname')),
                ('fuel_price', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.testfuelprice')),
            ],
        ),
        migrations.CreateModel(
            name='Request_fuel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_request_reference', models.UUIDField(default=uuid.uuid4)),
                ('fuel_amount_requested', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price_per_liter', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('total', models.DecimalField(decimal_places=2, max_digits=8)),
                ('date_requested', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved', models.BooleanField(default=False)),
                ('date_approved', models.DateTimeField(auto_now=True, null=True)),
                ('fuel_issue_complete', models.BooleanField(default=False)),
                ('date_closed', models.DateTimeField(null=True)),
                ('declined', models.BooleanField(default=False)),
                ('reason', models.TextField(blank=True, null=True)),
                ('barcode', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approver', to=settings.AUTH_USER_MODEL)),
                ('closed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fueler', to=settings.AUTH_USER_MODEL)),
                ('driver_assigned', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.driver')),
                ('fuel_type_requested', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.fuel_name')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.station')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vehicle_registration_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='transport.vehicle_register')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='transport.city')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='transport.country')),
            ],
        ),
        migrations.CreateModel(
            name='Mechanic_reg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pf_no', models.CharField(max_length=100, null=True)),
                ('mechanic_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mech', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Fuel_price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_price', models.CharField(max_length=200, null=True)),
                ('date_entered', models.DateTimeField(auto_now=True, null=True)),
                ('fuel_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.fuel_name')),
            ],
        ),
        migrations.CreateModel(
            name='Fuel_mgt_update',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_reference', models.UUIDField(default=uuid.uuid4)),
                ('fuel_amount_requested', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('date_requested', models.DateTimeField(auto_now_add=True)),
                ('approved', models.BooleanField(default=False)),
                ('date_approved', models.DateTimeField(auto_now=True, null=True)),
                ('fuel_issue_complete', models.BooleanField(default=False)),
                ('date_closed', models.DateTimeField(default=django.utils.timezone.now)),
                ('declined', models.BooleanField(default=False)),
                ('reason', models.TextField(blank=True, null=True)),
                ('barcode', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('liters_served', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('current_mileage', models.CharField(max_length=100, null=True)),
                ('date_fueled', models.DateTimeField(default=django.utils.timezone.now)),
                ('station_mileage', models.CharField(max_length=100, null=True)),
                ('fprice', models.CharField(max_length=100, null=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approver2', to=settings.AUTH_USER_MODEL)),
                ('attended_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attendant2', to=settings.AUTH_USER_MODEL)),
                ('closed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fueler2', to=settings.AUTH_USER_MODEL)),
                ('driver_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.driver')),
                ('fuel_type_requested', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.fuel_name')),
                ('price_per_liter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.fuel_price')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.station')),
                ('region_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rcode2', to='transport.userunit')),
                ('registration_no', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='transport.vehicle_register')),
                ('requested_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requester2', to=settings.AUTH_USER_MODEL)),
                ('station_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.fuel_station')),
            ],
        ),
        migrations.CreateModel(
            name='Fuel_mgt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_reference', models.UUIDField(default=uuid.uuid4)),
                ('fuel_amount_requested', models.DecimalField(decimal_places=2, max_digits=8)),
                ('date_requested', models.DateTimeField(auto_now_add=True)),
                ('approved', models.BooleanField(default=False)),
                ('date_approved', models.DateTimeField(auto_now=True, null=True)),
                ('fuel_issue_complete', models.BooleanField(default=False)),
                ('date_closed', models.DateTimeField(default=django.utils.timezone.now)),
                ('declined', models.BooleanField(default=False)),
                ('reason', models.TextField(blank=True, null=True)),
                ('barcode', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('previous_liters_served', models.CharField(max_length=100, null=True)),
                ('liters_served', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('previous_mileage', models.CharField(max_length=100, null=True)),
                ('current_mileage', models.CharField(max_length=100, null=True)),
                ('distance_covered', models.CharField(max_length=100, null=True)),
                ('date_fueled', models.DateTimeField(default=django.utils.timezone.now)),
                ('station_mileage', models.CharField(max_length=100, null=True)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('fprice', models.CharField(max_length=100, null=True)),
                ('approved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approver1', to=settings.AUTH_USER_MODEL)),
                ('attended_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attendant', to=settings.AUTH_USER_MODEL)),
                ('closed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fueler1', to=settings.AUTH_USER_MODEL)),
                ('driver_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.driver')),
                ('fuel_station_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.fuel_station')),
                ('fuel_type_requested', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.fuel_name')),
                ('price_per_liter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.fuel_price')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.station')),
                ('region_code', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rcode', to='transport.userunit')),
                ('registration_no', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='transport.vehicle_register')),
                ('requested_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requester1', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Driver_Incidents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occurence_topic', models.CharField(max_length=200)),
                ('details', models.TextField(blank=True, null=True)),
                ('action_taken', models.TextField(blank=True, null=True)),
                ('date_logged', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('driver_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.driver')),
                ('registered_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='incident_register', to=settings.AUTH_USER_MODEL)),
                ('station_assigned', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.station')),
                ('vehicle_assigned', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='transport.vehicle_register')),
            ],
        ),
        migrations.AddField(
            model_name='driver',
            name='assigned_vehicle',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.vehicle_register'),
        ),
        migrations.AddField(
            model_name='driver',
            name='entered_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='driver',
            name='region_assigned',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.station'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transport.country'),
        ),
        migrations.CreateModel(
            name='Assign_fuel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_name', models.CharField(choices=[('Devani Ltd along Kitui road', 'Devani Ltd - Kitui Rd'), ('Shell Filling station along Lusaka road', 'Shell Station - Lusaka Rd')], default='Devani Ltd along Kitui road', max_length=200)),
                ('fuel_type', models.CharField(choices=[('Diesel', 'Diesel'), ('Petrol', 'Petrol'), ('Lubricant', 'Lubricant')], default='Diesel', max_length=200)),
                ('previous_liters_served', models.CharField(max_length=100)),
                ('price_per_liter', models.DecimalField(decimal_places=2, max_digits=8)),
                ('liters_served', models.DecimalField(decimal_places=2, max_digits=8)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('previous_mileage', models.CharField(max_length=100)),
                ('current_mileage', models.CharField(max_length=100)),
                ('distance_covered', models.CharField(max_length=100, null=True)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('driver_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.driver')),
                ('entered_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.station')),
                ('vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='transport.vehicle_register')),
            ],
        ),
    ]
